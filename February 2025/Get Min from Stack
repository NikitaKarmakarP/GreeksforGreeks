class Solution {
  public:
    int minEle;
    stack<pair<int, int>> s;
    Solution() {
        // code here
    }

    // Add an element to the top of Stack
    void push(int x) {
        // code here
        if(s.size()==0) {
            s.push({x, x});
        } else {
            s.push({x, min(x, s.top().second)});
        }
    }

    // Remove the top element from the Stack
    void pop() {
        // code here
        if(s.empty()) return;
        pair<int, int> p = s.top();
        s.pop();
    }

    // Returns top element of the Stack
    int peek() {
        // code here
        if(s.empty()) return -1;
        return s.top().first;
    }

    // Finds minimum element of Stack
    int getMin() {
        // code here
        if(s.empty()) return -1;
        return s.top().second;
    }
};

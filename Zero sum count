class Solution {
public:
    int findSubarrayWithZeroSumCount(int arr[], int n) {
        unordered_map<int, int> prefixSumCount;
        int count = 0;
        int prefixSum = 0;
        
        for (int i = 0; i < n; i++) {
            prefixSum += arr[i];
            
            // Check if prefixSum is zero, then we found a subarray from start to i
            if (prefixSum == 0) {
                count++;
            }
            
            // If prefixSum is seen before, then there are subarrays with sum zero
            if (prefixSumCount.find(prefixSum) != prefixSumCount.end()) {
                count += prefixSumCount[prefixSum];
            }
            
            // Update the prefixSumCount
            prefixSumCount[prefixSum]++;
        }
        
        return count;
